---
title: "Quasiquotation"
author: "Joe Shaw"
format: html
---

**Quotation:** quotation is "capturing an expression without evaluating it".

**Unquotation:** unquotation is "the ability to selectively evaluate parts of an otherwise quoted expression."

**Quasiquotation:** quasiquotation ("quasi": half) is the combination of quotation and unquotation. Quasiquotation is an aspect of tidy evaluation which allows selective quoting and unquoting of expressions.

The three pillars of tidy evaluation are:

- Quasiquotation

- Quosures

- Data masks

# Quoting

Quoting is performed using expr() (and the list-output version exprs()) and enexpr() (and the list-output version enexprs()).

expr() quotes arguments defined by the person writing (or developing) the code - these arguments are usually in the body of the function.

enexpr() quotes arguments defined by the person using the code - these arguments are passed to the function call.

```{r}
#| label: quoting
#| include: TRUE

library(rlang)

f1 <- function(x, y) {
  # exprs() looks in the execution environment for x and y
  exprs(x = x, y = y)
}

f2 <- function(x, y) {
  # enexprs() looks in the function call for x and y
  enexprs(x = x, y = y)
}

f1(a + b, c + d)

f2(a + b, c + d)


```

# Unquoting

Unquoting is a key difference between base R and rlang: base R does not do unqoting.

Unquoting can be performed with !!

```{r}
#| label: unquoting
#| include: TRUE

x <- 1

# Quoting
expr(x + 1)

# Quoting and then unquoting with !!
expr(!!x + 1)

```

The !! operator is actually just a repetition of the ! symbol to mean "not" in base R.

```{r}
#| label: bang-bang

# Not true is false
!TRUE

# Not not true is true
!!TRUE

# Not not not true is false
!!!TRUE

```

